#!/usr/bin/python
# -*- coding: utf-8 -*-

# ========================================================================== #
#                                      									     #
#                 									                         #
#      				   Project Euler : probleme ___        			 	     #
#                                           						         #
#                                           						    	 #
# ========================================================================== #

# Consider all integer combinations of a**b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
#
# 22=4, 23=8, 24=16, 25=32
# 32=9, 33=27, 34=81, 35=243
# 42=16, 43=64, 44=256, 45=1024
# 52=25, 53=125, 54=625, 55=3125
#
# If they are then placed in numerical order, with any repeats removed, we get
# the following sequence of 15 distinct terms:
#
# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
#
# How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 
# and 2 ≤ b ≤ 100?

import time

# first : we generate all the 99**2 numbers (wisely)
# then we remove the doublons with list(set(list))

# Generate the numbers

M = [[] for i in range(99)] # M is a 99*99 matrix where M[i][j] = (i+2)**(j+2)
for i in range(99):
    M[i] = [(i+2)**(j+2) for j in range(99)]

L = [] # list containing all numbers
for i in range(99):
    L = L + M[i]

def main():
    t = time.time()
    print len(list(set(L)))
    print time.time() - t

# =========================== #
#                             #
#           Tests             #
#                             #
# =========================== #

if __name__ == '__main__':
    main()
